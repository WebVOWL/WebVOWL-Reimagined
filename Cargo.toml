[package]
    authors=["TheRealMorgenfrue"]
    description="WebVOWL rebuilt from stratch with a strong focus on performance and scalability."
    edition="2024"
    keywords=["force-directed-graph", "graph", "ontology", "vowl", "web"]
    license-file="LICENSE"
    name="webvowl-reimagined"
    readme="README.md"
    repository="https://github.com/WebVOWL/WebVOWL-Reimagined"
    version="0.0.1"

[lib]
    crate-type=["cdylib", "rlib"]


[dependencies]
    actix-files={version="=0.6.6", optional=true}
    actix-web={version="=4.11.0", optional=true, features=[
        "macros",
        "compress-brotli",
        "compress-gzip",
    ]}
    console_error_panic_hook={version="0.1", optional=true}
    console_log={version="1.0", optional=true}
    env_logger={version="0.11", optional=true}
    getrandom={version="0.3", features=["wasm_js"]}
    http={version="1.3.1", optional=true}
    icondata="0.6.0"
    leptos={version="0.8.8", features=["nightly"]}
    leptos_actix={version="0.8.5", optional=true}
    leptos_meta={version="0.8.5"}
    leptos_router={version="0.8.6", features=["nightly"]}
    log="0.4"
    rayon="1.10"
    thaw={version="0.5.0-beta", features=["nightly"]}
    wasm-bindgen={version="=0.2.100", optional=true}
    wasm-bindgen-futures={version="0.4.50", optional=true}
    wasm-bindgen-rayon={version="1.3.0", optional=true, features=["no-bundler"]}

    [dependencies.grapher]
        git="https://github.com/WebVOWL/RustGrapher"
        optional=true
        version="0.3"

    [dependencies.web-sys]
        version="0.3.77"
        # https://docs.rs/web-sys/latest/web_sys/#modules
        features=[
            # "Blob",
            "Document",
            "Element",
            # "File",
            # "HtmlElement",
            # "Node",
            "Window",
            # "console",
        ]


[features]
    csr=["leptos/csr"]
    hydrate=["leptos/hydrate", "thaw/hydrate", "nonce"]
    nonce=["leptos/nonce"]
    server=["dep:env_logger"]
    ssr=[
        "dep:actix-files",
        "dep:actix-web",
        "dep:leptos_actix",
        "leptos/ssr",
        "leptos_meta/ssr",
        "leptos_router/ssr",
        "thaw/ssr",
    ]
    wasm=[
        "dep:console_error_panic_hook",
        "dep:console_log",
        "dep:wasm-bindgen",
        "dep:wasm-bindgen-futures",
        "dep:wasm-bindgen-rayon",
        "dep:grapher",
    ]

    [package.metadata.cargo-all-features]
        denylist=[
            "actix-files",
            "actix-web",
            "console_error_panic_hook",
            "leptos_actix",
            "wasm-bindgen",
        ]
        skip_feature_sets=[
            [
                "csr",
                "ssr",
            ],
            [
                "csr",
                "hydrate",
            ],
            [
                "ssr",
                "hydrate",
            ],
            [
            ],
        ]

# Default profile for devs, fast to compile, okay enough to run
[profile.dev]
    debug=false
    debug-assertions=false
    incremental=true
    lto=false
    opt-level=1
    overflow-checks=true
    panic="unwind"

# This profile is used for production releases - compile time doesn't matter.
[profile.release]
    codegen-units=1
    debug=false
    debug-assertions=false
    incremental=false
    lto=true
    opt-level=3
    overflow-checks=false
    panic="abort"

# This profile is a production release of the server binary with debug info.
# Used by developers to test and debug a production release
[profile.preview]
    debug=true
    inherits="release"

# This profile is a production release of the WebAssembly module with debug info.
# Used by developers to test and debug a production release
[profile.wasm-preview]
    debug=true
    inherits="release"

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
    inherits="release"
    # opt-level='z'
    strip=true


    [package.metadata.leptos]
        wasm-opt-features=[
            # Enable partial inlining of if-blocks to increase performance slightly
            "--partial-inlining-ifs=1-4",

            # Monomorphization of functions to increase performance significantly (~2x)
            # at the cost of file size.
            # https://github.com/WebAssembly/binaryen/wiki/Optimizer-Cookbook#monomorphization
            "-O3",
            "--monomorphize",
            "--pass-arg=monomorphize-min-benefit@50",
            # -O4 optimizes very aggressively for performance at the cost of compile time.
            # https://github.com/WebAssembly/binaryen/blob/c62a0c97168e88f97bca4bd96298a5ffc041844d/test/lit/help/wasm-opt.test#L539
            "-O4",

            # Reduce file size in multiple passes (disabled in favor of speed)
            # https://github.com/WebAssembly/binaryen/wiki/Optimizer-Cookbook#converge
            # "--converge",
            # "-Oz",

            "--enable-bulk-memory",
            "--enable-nontrapping-float-to-int",
            "--enable-simd",
            "--enable-threads",
        ]
        # The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
        output-name="webvowl"
        # The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
        site-root="target/site"
        # The site-root relative folder where all compiled output (JS, WASM and CSS) is written
        # Defaults to pkg
        site-pkg-dir="pkg"
        # The features to use when compiling all targets
        features=[]
        # The target triple to use when compiling the bin target
        bin-target-triple="x86_64-unknown-linux-gnu"
        # The features to use when compiling the bin target
        #
        # Optional. Can be over-ridden with the command line parameter --bin-features
        bin-features=["ssr", "server"]
        # If the --no-default-features flag should be used when compiling the bin target
        #
        # Optional. Defaults to false.
        bin-default-features=false
        # The profile to use for the bin target when compiling for release
        #
        # Optional. Defaults to "release".
        bin-profile-release="release"
        # Pass additional parameters to the cargo process to build the server
        bin-cargo-args=[]
        # The features to use when compiling the lib target
        #
        # Optional. Can be over-ridden with the command line parameter --lib-features
        lib-features=["hydrate", "wasm"]
        # If the --no-default-features flag should be used when compiling the lib target
        #
        # Optional. Defaults to false.
        lib-default-features=false
        # The profile to use for the lib target when compiling for release
        #
        # Optional. Defaults to "release".
        lib-profile-release="wasm-release"
        # Pass additional parameters to the cargo process compiling to WASM
        lib-cargo-args=[]
        # The source style file. If it ends with _.sass_ or _.scss_ then it will be compiled by `dart-sass`
        # into CSS and processed by lightning css. When release is set, then it will also be minified.
        #
        # Optional. Env: LEPTOS_STYLE_FILE.
        style-file="style/main.scss"
        # The tailwind input file.
        #
        # Optional, Activates the tailwind build
        # tailwind-input-file="style/tailwind.css"
        # The browserlist https://browsersl.ist query used for optimizing the CSS.
        #
        # Optional, defaults to "defaults". Env: LEPTOS_BROWSERQUERY.
        browserquery="defaults"
        # Assets source dir. All files found here will be copied and synchronized to site-root.
        # The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
        #
        # Optional. Must not be an empty string. Env: LEPTOS_ASSETS_DIR.
        assets-dir="public"
        # JS source dir. `wasm-bindgen` has the option to include JS snippets from JS files
        # with `#[wasm_bindgen(module = "/js/foo.js")]`. A change in any JS file in this dir
        # will trigger a rebuild.
        #
        # Optional. Defaults to "src"
        js-dir="public/js"
        # Enables minification of the JS glue needed for Leptos to work.
        # Uses SWC (Speed Web Compiler) to mangle and compress the JS, which it treats as a module.
        #
        # Applies to release builds only.
        #
        # Optional: Defaults to false. Can also be set with the LEPTOS_JS_MINIFY=false env var (must be set at runtime too)
        js-minify=true
        # Additional files your application could depends on.
        # A change to any file in those directories will trigger a rebuild.
        #
        # Optional.
        watch-additional-files=[]
        # The IP and port where the server serves the content. Use it in your server setup.
        #
        # Optional, defaults to 127.0.0.1:3000. Env: LEPTOS_SITE_ADDR.
        site-addr="127.0.0.1:3000"
        # The port number used by the reload server (only used in watch mode).
        #
        # Optional, defaults 3001. Env: LEPTOS_RELOAD_PORT
        reload-port=3001
        # The command used for running end-to-end tests. See the section about End-to-end testing.
        #
        # Optional. Env: LEPTOS_END2END_CMD.
        end2end-cmd="npx playwright test"
        # The directory from which the end-to-end tests are run.
        #
        # Optional. Env: LEPTOS_END2END_DIR
        end2end-dir="tests/end2end"
        # The default prefix to use for server functions when generating API routes. Can be
        # overridden for individual functions using `#[server(prefix = "...")]` as usual.
        #
        # This is useful to override the default prefix (`/api`) for all server functions without
        # needing to manually specify via `#[server(prefix = "...")]` on every server function.
        #
        # Optional. Defaults to "/api". Env: SERVER_FN_PREFIX
        server-fn-prefix="/api"
